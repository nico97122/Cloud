/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cloud.ui;

import Cloud.fc.ConnexionBD;
import Cloud.fc.ConnexionPACS;
import Cloud.fc.Date2;
import Cloud.fc.Examen;
import Cloud.fc.Fonctionnalite;
import Cloud.fc.FonctionnaliteBD;
import Cloud.fc.Imprimer;
import Cloud.fc.Patient;
import Cloud.fc.PersonneH;
import Cloud.fc.random;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 *
 * @author Juliette-Trouillet
 */
public class ManipRadio extends javax.swing.JFrame {

    Vector<String> dataUrlImg = new Vector(); 
    Vector<String> dataNomImg=new Vector();
    Vector<String> ListeImgV = new Vector();
    public ArrayList<ArrayList<String>> ListeImgR = new ArrayList<ArrayList<String>>();
    public ArrayList<String> ListeImgR2 = new ArrayList<String>();
    private DefaultListModel modelFromBD = new DefaultListModel();
    String idPatient;

    /**
     * Creates new form ManipRadio
     */
    public ManipRadio() {
        initComponents();
        setSize(1500, 700);
        this.setResizable(false);
        jLabel12.setSize(1400, 700);
        jLabel16.setSize(1400, 700);
        jLabel13.setSize(1400, 700);
    }

    public ManipRadio(String nom, String prenom) {
        initComponents();
        setResizable(false);
        setSize(1500, 700);
        jLabel12.setSize(1400, 700);
        jLabel16.setSize(1400, 700);
        jLabel13.setSize(1400, 700);
        jLabel14.setText(nom);
        jLabel15.setText(prenom);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jFormattedTextField3 = new javax.swing.JFormattedTextField();
        jFormattedTextField4 = new javax.swing.JFormattedTextField();
        jButton4 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jTextField3 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jComboBox3 = new javax.swing.JComboBox();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel5.setLayout(null);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Cloud/image/paramètre .png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton2);
        jButton2.setBounds(90, 550, 60, 50);

        jButton3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton3.setText("Déconnexion");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3);
        jButton3.setBounds(1060, 559, 140, 50);

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 1, 48)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Nom");
        jPanel5.add(jLabel14);
        jLabel14.setBounds(70, 70, 270, 80);

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 1, 48)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Prenom");
        jPanel5.add(jLabel15);
        jLabel15.setBounds(70, 190, 260, 60);

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Cloud/image/nurse_person_woman_people_1697.png"))); // NOI18N
        jPanel5.add(jLabel20);
        jLabel20.setBounds(970, 70, 200, 256);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Cloud/image/wallpaperFinal-4.png"))); // NOI18N
        jPanel5.add(jLabel16);
        jLabel16.setBounds(0, -10, 1350, 700);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Accueil", jPanel4);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel7.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 28)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Type d'examen");
        jPanel7.add(jLabel6);
        jLabel6.setBounds(410, 62, 220, 30);

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 28)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Nom : ");
        jPanel7.add(jLabel9);
        jLabel9.setBounds(200, 230, 110, 30);

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 0, 28)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Prénom : ");
        jPanel7.add(jLabel10);
        jLabel10.setBounds(170, 320, 130, 30);

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 28)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Date de naissance : ");
        jPanel7.add(jLabel11);
        jLabel11.setBounds(30, 420, 280, 30);

        jComboBox2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "rx", "radio", "echographie", "scanner", "irm", "mammographie", "scintigraphie" }));
        jPanel7.add(jComboBox2);
        jComboBox2.setBounds(640, 70, 170, 25);

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 28)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Date : ");
        jPanel7.add(jLabel7);
        jLabel7.setBounds(800, 260, 100, 30);

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 28)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Heure : ");
        jPanel7.add(jLabel8);
        jLabel8.setBounds(790, 370, 110, 40);

        jTextField4.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jTextField4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField4MouseClicked(evt);
            }
        });
        jPanel7.add(jTextField4);
        jTextField4.setBounds(350, 230, 260, 40);

        jTextField5.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jTextField5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField5MouseClicked(evt);
            }
        });
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jPanel7.add(jTextField5);
        jTextField5.setBounds(350, 320, 260, 40);

        jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        jFormattedTextField2.setText("jj/mm/aaaa");
        jFormattedTextField2.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jFormattedTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField2MouseClicked(evt);
            }
        });
        jPanel7.add(jFormattedTextField2);
        jFormattedTextField2.setBounds(350, 420, 260, 40);

        jFormattedTextField3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        jFormattedTextField3.setText("jj/mm/aaaa");
        jFormattedTextField3.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jFormattedTextField3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField3MouseClicked(evt);
            }
        });
        jFormattedTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField3ActionPerformed(evt);
            }
        });
        jPanel7.add(jFormattedTextField3);
        jFormattedTextField3.setBounds(910, 260, 200, 40);

        jFormattedTextField4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        jFormattedTextField4.setText("hh:mm");
        jFormattedTextField4.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jFormattedTextField4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField4MouseClicked(evt);
            }
        });
        jFormattedTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField4ActionPerformed(evt);
            }
        });
        jPanel7.add(jFormattedTextField4);
        jFormattedTextField4.setBounds(910, 370, 200, 40);

        jButton4.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton4.setText("Ajouter cet examen");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jPanel7.add(jButton4);
        jButton4.setBounds(1040, 570, 170, 50);

        jLabel17.setFont(new java.awt.Font("Lucida Grande", 0, 28)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Sélectionner une image :");
        jPanel7.add(jLabel17);
        jLabel17.setBounds(50, 550, 350, 37);

        jButton5.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton5.setText("Parcourir");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jPanel7.add(jButton5);
        jButton5.setBounds(670, 560, 130, 27);

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "selectionnez une image..." };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        jPanel7.add(jScrollPane2);
        jScrollPane2.setBounds(410, 560, 250, 70);

        jButton11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton11.setText("Visualiser");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton11);
        jButton11.setBounds(810, 560, 130, 30);

        jButton12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton12.setText("Retirer l'image");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });
        jPanel7.add(jButton12);
        jButton12.setBounds(670, 600, 130, 30);

        jButton13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton13.setText("Vider la liste");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton13);
        jButton13.setBounds(810, 600, 130, 30);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Cloud/image/wallpaperFinal-4.png"))); // NOI18N
        jLabel12.setText("jj/mm/aaaa");
        jLabel12.setToolTipText("");
        jPanel7.add(jLabel12);
        jLabel12.setBounds(0, 0, 1420, 650);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ajouter un examen", jPanel1);

        jPanel2.setToolTipText("");
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel3.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nom : ");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(340, 60, 110, 37);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 28)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Prénom : ");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(300, 140, 131, 37);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 28)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Date de naissance : ");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(150, 200, 300, 40);

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 28)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Identifiant : ");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(260, 290, 180, 30);

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 28)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Sexe : ");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(340, 446, 110, 37);

        jTextField1.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel3.add(jTextField1);
        jTextField1.setBounds(460, 60, 370, 40);

        jTextField2.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel3.add(jTextField2);
        jTextField2.setBounds(460, 130, 370, 40);

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        jFormattedTextField1.setText("jj/mm/aaaa");
        jFormattedTextField1.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jFormattedTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextField1MouseClicked(evt);
            }
        });
        jPanel3.add(jFormattedTextField1);
        jFormattedTextField1.setBounds(460, 210, 370, 40);

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jPanel3.add(jTextField3);
        jTextField3.setBounds(460, 280, 370, 40);

        jComboBox1.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Femme", "Homme" }));
        jPanel3.add(jComboBox1);
        jComboBox1.setBounds(470, 437, 220, 50);

        jButton1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton1.setText("Ajouter ce patient");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel3.add(jButton1);
        jButton1.setBounds(1021, 560, 177, 48);

        jButton14.setText("Générer un id");
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14MouseClicked(evt);
            }
        });
        jPanel3.add(jButton14);
        jButton14.setBounds(840, 280, 150, 40);

        jLabel19.setFont(new java.awt.Font("Lucida Grande", 1, 28)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Adresse :");
        jPanel3.add(jLabel19);
        jLabel19.setBounds(290, 370, 140, 30);

        jTextField6.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jTextField6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField6MouseClicked(evt);
            }
        });
        jPanel3.add(jTextField6);
        jTextField6.setBounds(460, 360, 370, 40);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Cloud/image/wallpaperFinal-4.png"))); // NOI18N
        jPanel3.add(jLabel13);
        jLabel13.setBounds(0, 0, 1420, 650);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Ajouter un patient", jPanel2);

        jPanel6.setLayout(null);

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Patient 1", "Patient 2", "Patient 3", "Patient 4", "Patient 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jPanel6.add(jScrollPane1);
        jScrollPane1.setBounds(238, 114, 630, 470);

        jComboBox3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Trier par...", "Nom", "Prenom", "Id" }));
        jPanel6.add(jComboBox3);
        jComboBox3.setBounds(238, 74, 97, 25);

        jButton6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton6.setText("Trier ");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jPanel6.add(jButton6);
        jButton6.setBounds(382, 73, 67, 27);

        jButton7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton7.setText("OK");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        jPanel6.add(jButton7);
        jButton7.setBounds(790, 70, 53, 27);

        jTextField7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jTextField7.setText("Rechercher..");
        jTextField7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField7MouseClicked(evt);
            }
        });
        jPanel6.add(jTextField7);
        jTextField7.setBounds(680, 70, 88, 25);

        jButton8.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton8.setText("Imprimer");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });
        jPanel6.add(jButton8);
        jButton8.setBounds(1190, 599, 120, 40);

        jButton9.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton9.setText("Exporter en PDF");
        jPanel6.add(jButton9);
        jButton9.setBounds(1020, 600, 160, 40);

        jButton10.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton10.setText("Consulter");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton10);
        jButton10.setBounds(890, 600, 120, 40);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("selectionnez un patient...");
        jScrollPane3.setViewportView(jTextArea1);

        jPanel6.add(jScrollPane3);
        jScrollPane3.setBounds(930, 120, 340, 470);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Cloud/image/wallpaperFinal-4.png"))); // NOI18N
        jPanel6.add(jLabel18);
        jLabel18.setBounds(0, 0, 1440, 660);

        jTabbedPane1.addTab("DMR", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField4MouseClicked
        jTextField4.setText("");
    }//GEN-LAST:event_jTextField4MouseClicked

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MouseClicked
        jTextField5.setText("");
    }//GEN-LAST:event_jTextField5MouseClicked

    private void jFormattedTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField2MouseClicked
        jFormattedTextField2.setText("");
    }//GEN-LAST:event_jFormattedTextField2MouseClicked

    private void jFormattedTextField3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField3MouseClicked
        jFormattedTextField3.setText("");
    }//GEN-LAST:event_jFormattedTextField3MouseClicked

    private void jFormattedTextField4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField4MouseClicked
        jFormattedTextField4.setText("");
    }//GEN-LAST:event_jFormattedTextField4MouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        try {
            ConsulterDMRMR consultMR = new ConsulterDMRMR(idPatient);
            consultMR.setVisible(true);
          
        } catch (Exception ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        ArrayList<String> listenompatient = new ArrayList<>();
        ConnexionBD co = new ConnexionBD();
        boolean b = false;
        try {
            co.connexion();
        } catch (Exception ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {// verifie si la patient existe dans la bd            

            listenompatient = co.requete("nom", "patient", "").get(0);

        } catch (SQLException ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < listenompatient.size(); i++) {
            System.out.println(listenompatient.get(i).toLowerCase());
            if (listenompatient.get(i).toLowerCase().equalsIgnoreCase(this.jTextField4.getText().toLowerCase())) {
                b = true;
            }
        }

        if (b == false) {
            JOptionPane.showMessageDialog(this, "Patient Inexistant", "Erreur", JOptionPane.WARNING_MESSAGE);
        } else if (this.jList2.getModel().getElementAt(0).equals("selectionnez une image...") || this.jList2.getModel().getElementAt(0).equals("")) {
            JOptionPane.showMessageDialog(this, "Veuillez ajouter une image", "Erreur", JOptionPane.WARNING_MESSAGE);
        } else if (jFormattedTextField3.getText().equals("jj/mm/aaaa")) {  //on regarde si l'utilisateur à bien completé la date
            JOptionPane.showMessageDialog(this, "Veuillez compléter la date de l'examen", "Erreur", JOptionPane.WARNING_MESSAGE);
        } else if (jFormattedTextField4.getText().equals("hh:mm")) {
            JOptionPane.showMessageDialog(this, "Veuillez compléter l'heure de l'examen", "Erreur", JOptionPane.WARNING_MESSAGE);
        } else if (jFormattedTextField2.getText().equals("jj/mm/aaaa")) {
            JOptionPane.showMessageDialog(this, "Veuillez compléter la date de naissance", "Erreur", JOptionPane.WARNING_MESSAGE);

        } else {

            ArrayList<ArrayList<String>> listeIdExamen = new ArrayList<>();
            String nom = this.jTextField4.getText();
            String prenom = this.jTextField5.getText();
            Date2 date = new Date2(jFormattedTextField2.getText());
            Date2 dateE = new Date2(jFormattedTextField3.getText() + " " + this.jFormattedTextField4.getText());

            String NomPerso = this.jLabel14.getText();

            String iddbExamen = "";
            String iddbPersonnel = "";
            String idPatient = "";
            random r = new random();
//            int sexe = this.jComboBox1.getSelectedIndex();
            String typeE = (String) this.jComboBox2.getSelectedItem();
            String NumArchivage = dateE.toString() +" "+ this.jFormattedTextField4.getText();

            try {
                listeIdExamen = co.requete("iddbexamen", "examen", "");

            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {//prend id ccorrespondant au patient dans la bd
                idPatient = co.requete("idpatient", "patient", "where nom= '" + nom + "'").get(0).get(0);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            iddbExamen = r.genererId(9);  //generer un id pour la database
            while (listeIdExamen.get(0).contains(iddbExamen)) {  //sert à eviter les doublons d'id dans la base de donnée.
                iddbExamen = r.genererId(9);
            }
            // System.out.println("iddbExamen :" + iddbExamen);

            try {
                iddbPersonnel = co.requete("iddbpersonnel", "personnel", "where nom=" + "'" + NomPerso + "'").get(0).get(0);
            } catch (SQLException ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }

            int i = co.insert("examen", "iddbexamen,iddbmedecin,dateexam,typeexam,numeroarchivage,idpatient", "'" + iddbExamen + "'" + "," + "'" + iddbPersonnel + "'" + "," + "'" + dateE.toStringDateNaissDB() + "'" + "," + "'" + typeE + "'" + "," + "'" + NumArchivage + "'" + "," + "'" + idPatient + "'");

            try {
                co.deconnexion();
            } catch (Exception ex) {
                Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
            }       
        
        
        ConnexionPACS con = new ConnexionPACS();//gestion de l'enregistrement des images
            try {
                con.connexion();
            } catch (Exception ex) {
                Logger.getLogger(PH.class.getName()).log(Level.SEVERE, null, ex);
            }
            ArrayList<ArrayList<String>> listeIdImg = new ArrayList<>();

            try {
                listeIdImg = con.requetePACS("id", "PACS", "");

            } catch (SQLException ex) {
                Logger.getLogger(PH.class.getName()).log(Level.SEVERE, null, ex);
            }

            String numArchivage = this.jFormattedTextField2.getText() + " " + this.jFormattedTextField3.getText();
            for (int j = 0; j < this.jList2.getModel().getSize(); j++) {
                String idImg = r.genererId(9);  //generer un id pour la database
                while (listeIdImg.get(0).contains(idImg)) {  //sert à eviter les doublons d'id dans la base de donnée.
                    idImg = r.genererId(9);
                }
                
                con.saveImage(this.dataUrlImg.elementAt(j), idImg, numArchivage);

            }
            JOptionPane.showMessageDialog(this, "Examen ajouté", "confirmation", JOptionPane.INFORMATION_MESSAGE);
        

        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jFormattedTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField3ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (jTextField3.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Veuillez générer l'identifiant du patient", "Erreur", JOptionPane.WARNING_MESSAGE);
        } else if (jFormattedTextField1.getText().equals("jj/mm/aaaa")) {  //on regarde si l'utilisateur à bien completé la date
            JOptionPane.showMessageDialog(this, "Veuillez compléter la date de naissance", "Erreur", JOptionPane.WARNING_MESSAGE);
        } else {
            String nom = this.jTextField1.getText();
            String prenom = this.jTextField2.getText();
            Date2 date = new Date2(jFormattedTextField1.getText());
            String id = this.jTextField3.getText();
            String adresse = this.jTextField6.getText();
            ArrayList<ArrayList<String>> listeIddb = new ArrayList<>();
            ArrayList<ArrayList<String>> liste = new ArrayList<>();
            random r = new random();
            String iddbpatient;
            ConnexionBD co = new ConnexionBD();
            int sexe = this.jComboBox1.getSelectedIndex();

            try {
                co.connexion();
            } catch (Exception ex) {
                Logger.getLogger(SecretaireMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                listeIddb = co.requete("iddbpatient", "patient", "");

            } catch (SQLException ex) {
                Logger.getLogger(SecretaireMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            iddbpatient = r.genererId(9);  //generer un id pour la database
            while (listeIddb.get(0).contains(iddbpatient)) {  //sert à eviter les doublons d'id dans la base de donnée.
                iddbpatient = r.genererId(9);
            }
            String attribut = "'" + iddbpatient + "'" + "," + "'" + date.toStringDateNaissDB() + "'" + "," + "'" + nom + "'" + "," + "'" + prenom + "'" + "," + "'" + sexe + "'" + "," + "'" + id + "'" + "," + "'" + adresse + "'";
            System.out.println(attribut);
            int i = co.insert("patient", "iddbpatient,datenaissance,nom,prenom,sexe,idpatient,adresse", "'" + iddbpatient + "'" + "," + "'" + date.toStringDateNaissDB() + "'" + "," + "'" + nom + "'" + "," + "'" + prenom + "'" + "," + "'" + sexe + "'" + "," + "'" + id + "'" + "," + "'" + adresse + "'");
            System.out.println(i);

            try {
                liste = co.requete("nom", "patient", "");
            } catch (SQLException ex) {
                Logger.getLogger(SecretaireMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println(liste.toString());
            JOptionPane.showMessageDialog(this, "Patient ajouté", "Confirmation", JOptionPane.INFORMATION_MESSAGE);

            try {
                co.deconnexion();
            } catch (Exception ex) {
                Logger.getLogger(SecretaireMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.jTextField1.setText("");
            this.jTextField2.setText("");
            this.jTextField3.setText("");
            this.jFormattedTextField1.setText("jj/mm/aaaa");
            this.jTextField5.setText("");
            this.jTextField6.setText("");
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
          Vector<String> dataIni = new Vector();
        dataUrlImg.clear();
        dataNomImg.clear();
        jList2.setListData(dataIni);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
         JFileChooser fileOuvrir = new JFileChooser();

        if (fileOuvrir.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            this.dataUrlImg.add(new File(fileOuvrir.getSelectedFile().getAbsolutePath()).getPath());
            dataNomImg.add(new File(fileOuvrir.getSelectedFile().getAbsolutePath()).getName());
            this.jList2.setListData(dataNomImg);
        }
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        if (jList2.getLastVisibleIndex() != -1) {
            if (!"selectionnez une image...".equals(jList2.getModel().getElementAt(0))) {
                new VisualisationImg(jList2.getSelectedValue()).setVisible(true);
            }
        }
    }//GEN-LAST:event_jButton11MouseClicked

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked
          if (jList2.getSelectedIndex() != -1) {
            int elemASup = this.jList2.getSelectedIndex();
            dataUrlImg.remove(elemASup);
            dataNomImg.remove(elemASup);
            jList2.setListData(dataNomImg);
        }
    }//GEN-LAST:event_jButton12MouseClicked

    private void jFormattedTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField4ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        idPatient = jList1.getSelectedValue().toString().split(" ")[0];
       if (jList1.isSelectionEmpty() == false) {

            Patient p = new Patient();

            try {

                String IdNomPrenom = jList1.getSelectedValue().toString();
                String nom = IdNomPrenom.split("   ")[1];
                String prenom = IdNomPrenom.split("   ")[2];
                String Id = IdNomPrenom.split("   ")[0];
                FonctionnaliteBD f = new FonctionnaliteBD();
                ArrayList<Examen> listeE = f.ListeExamenBD();
                ArrayList<Patient> listeP = f.ListePatientBD(listeE);
                ArrayList<PersonneH> listePersonnel = f.ListePersonnelBD();
                for (int i = 0; i < listeP.size(); i++) {
                    if (listeP.get(i).getId().equals(Id)) {
                        p.setDateN(listeP.get(i).getDateN());
                        p.setId(Id);
                        p.setListeExam(listeP.get(i).getListeExam());
                        p.setNom(nom);
                        p.setPrenom(prenom);
                        p.setSexe(listeP.get(i).getSexe());

                    }

                }
                String AffichageLE = "";
                String nomPracticien = "";

                for (int j = 0; j < p.getListeExam().size(); j++) {
                    for (int x = 0; x < listePersonnel.size(); x++) {
                        //System.out.println("idmed"+p.getListeExam().get(j).);
                        //  System.out.println("idmed"+listePersonnel.get(x).getId());
                        if (p.getListeExam().get(j).getIdMed().equals(listePersonnel.get(x).getId())) {

                            nomPracticien = listePersonnel.get(x).getNom() + listePersonnel.get(x).getPrenom();
                        }
                    }

                }
                for (int i = 0; i < p.getListeExam().size(); i++) {
                    AffichageLE += "\n  Type Examen : " + p.getListeExam().get(i).getTypeExamen().toString() + "\n" + "  Date : " + p.getListeExam().get(i).getDate() + "\n" + "  Praticien : " + nomPracticien + "\n" + "  Compte Rendu: :\n" + p.getListeExam().get(i).getCr() + "\n";

                }

                this.jTextArea1.setText("Nom :" + nom + "\n" + "Prénom" + prenom + "\n" + "Date de Naissance :" + p.getDateN().toString() + "\n" + "Sexe :" + p.getSexe().toString() + "\n" + "Examens : \n" + AffichageLE);

            } catch (Exception ex) {
                Logger.getLogger(SecretaireMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_jList1MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            FonctionnaliteBD f = new FonctionnaliteBD();
            DefaultListModel model = new DefaultListModel();
            ArrayList<String> listNom = new ArrayList<>();
            ArrayList<String> listPrenom = new ArrayList<>();
            ArrayList<ArrayList<String>> listepatient = new ArrayList<>();

            ArrayList<Examen> listeE = f.ListeExamenBD();

            ArrayList<Patient> listeP = f.ListePatientBD(listeE);

            for (int i = 0; i < listeP.size(); i++) {
                model.addElement(listeP.get(i).getId() + "   " + listeP.get(i).getNom() + "   " + listeP.get(i).getPrenom());

            }
            jList1.setModel(model);
            modelFromBD = model;

        } catch (Exception ex) {
            Logger.getLogger(SecretaireMedicale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void jButton14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14MouseClicked
        random r = new random();
        ConnexionBD co = new ConnexionBD();
        ArrayList<ArrayList<String>> listeId = new ArrayList<>();
        String id = r.genererId(10);
        try {
            co.connexion();
        } catch (Exception ex) {
            Logger.getLogger(ConnexionSIR.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            listeId = co.requete("idpatient", "patient", "");
            System.out.println(listeId.toString());

        } catch (SQLException ex) {
            Logger.getLogger(SecretaireMedicale.class.getName()).log(Level.SEVERE, null, ex);
        }
        while (listeId.get(0).contains(id)) {
            id = r.genererId(10);
        }
        jTextField3.setText(id);
        try {
            co.deconnexion();
        } catch (Exception ex) {
            Logger.getLogger(SecretaireMedicale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton14MouseClicked

    private void jFormattedTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextField1MouseClicked
        this.jFormattedTextField1.selectAll();
    }//GEN-LAST:event_jFormattedTextField1MouseClicked

    private void jTextField6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField6MouseClicked
        this.jTextField6.selectAll();
    }//GEN-LAST:event_jTextField6MouseClicked

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
         if (this.jTabbedPane1.getSelectedIndex() == 3) {
            try {
                FonctionnaliteBD f = new FonctionnaliteBD();
                DefaultListModel model = new DefaultListModel();
                ArrayList<String> listNom = new ArrayList<>();
                ArrayList<String> listPrenom = new ArrayList<>();
                ArrayList<ArrayList<String>> listepatient = new ArrayList<>();

                ArrayList<Examen> listeE = f.ListeExamenBD();

                ArrayList<Patient> listeP = f.ListePatientBD(listeE);

                for (int i = 0; i < listeP.size(); i++) {
                    model.addElement(listeP.get(i).getId() + "   " + listeP.get(i).getNom() + "   " + listeP.get(i).getPrenom());

                }
                jList1.setModel(model);
                modelFromBD = model;

            } catch (Exception ex) {
                Logger.getLogger(SecretaireMedicale.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jTextField7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField7MouseClicked
        this.jTextField7.selectAll();
    }//GEN-LAST:event_jTextField7MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
         if (this.jComboBox3.getSelectedIndex() == 3) {
            DefaultListModel model = new DefaultListModel();
            ArrayList<String> listeTrie = new ArrayList<>();
            Fonctionnalite f = new Fonctionnalite();
            ListModel l = this.jList1.getModel();
            ArrayList<String> listePourTri = new ArrayList<>();
            for (int i = 0; i < l.getSize(); i++) {
                listePourTri.add((String) l.getElementAt(i));
            }
            listeTrie = f.tri(listePourTri);
            for (int j = 0; j < listeTrie.size(); j++) {
                model.addElement(listeTrie.get(j));
            }
            this.jList1.setModel(model);
        }

        if (this.jComboBox3.getSelectedIndex() == 1) {
            DefaultListModel model = new DefaultListModel();
            ArrayList<String> listeTrie = new ArrayList<>();
            Fonctionnalite f = new Fonctionnalite();
            ListModel l = this.jList1.getModel();
            ArrayList<String> listePourTri = new ArrayList<>();
            ArrayList<String> listeInitial = new ArrayList<>();

            for (int i = 0; i < l.getSize(); i++) {
                listePourTri.add(((String) l.getElementAt(i)).split("   ")[1]);
                listeInitial.add((String) l.getElementAt(i));
            }

            listeTrie = f.tri(listePourTri);
            for (int j = 0; j < listeTrie.size(); j++) {
                for (int k = 0; k < listeInitial.size(); k++) {
                    if (listeInitial.get(k).split("   ")[1].contains(listeTrie.get(j))) {
                        model.addElement(listeInitial.get(k));
                    }

                }

            }
            this.jList1.setModel(model);
        }
        if (this.jComboBox3.getSelectedIndex() == 2) {
            ArrayList<String> listeTrie = new ArrayList<>();
            DefaultListModel model = new DefaultListModel();
            Fonctionnalite f = new Fonctionnalite();
            ListModel l = this.jList1.getModel();
            ArrayList<String> listePourTri = new ArrayList<>();
            ArrayList<String> listeInitial = new ArrayList<>();
            for (int i = 0; i < l.getSize(); i++) {
                listePourTri.add(((String) l.getElementAt(i)).split("   ")[2]);
                listeInitial.add((String) l.getElementAt(i));
            }
            listeTrie = f.tri(listePourTri);
            for (int j = 0; j < listeTrie.size(); j++) {
                for (int k = 0; k < listeInitial.size(); k++) {
                    if (listeInitial.get(k).split("   ")[2].contains(listeTrie.get(j))) {
                        model.addElement(listeInitial.get(k));
                    }

                }

            }
            this.jList1.setModel(model);
        }
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
         ListModel l = this.jList1.getModel();
        DefaultListModel model = new DefaultListModel();

        ArrayList<String> listepourrecherche = new ArrayList<>();
        for (int i = 0; i < modelFromBD.getSize(); i++) {
            listepourrecherche.add((String) modelFromBD.getElementAt(i));
        }

        Fonctionnalite f = new Fonctionnalite();
        ArrayList<String> listeElementTrouve = f.recherche(this.jTextField7.getText(), listepourrecherche);
        for (int i = 0; i < listeElementTrouve.size(); i++) {
            model.addElement(listeElementTrouve.get(i));
        }
        jList1.setModel(model);
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        Imprimer imp=new Imprimer(this.jTextArea1);
         imp.print();
    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ConnexionSIR connect1 = new ConnexionSIR();
        connect1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        ConnexionSIR co = new ConnexionSIR();
        this.dispose();
        co.setVisible(true);
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String iddbPerso = "";

            FonctionnaliteBD f = new FonctionnaliteBD();
            ArrayList<PersonneH> listePerso = f.ListePersonnelBD();
            for (int i = 0; i < listePerso.size(); i++) {

                if (listePerso.get(i).getNom().equals(this.jLabel14.getText() + "")) {
                    iddbPerso = listePerso.get(i).getId();

                }
            }
            ChangerMdp changemanip = new ChangerMdp(iddbPerso);
            changemanip.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(ManipRadio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManipRadio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManipRadio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManipRadio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManipRadio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManipRadio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JFormattedTextField jFormattedTextField3;
    private javax.swing.JFormattedTextField jFormattedTextField4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
