/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cloud.ui;
import java.awt.Graphics;
import Cloud.fc.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JPanel;
/**
 *
 * @author nicol
 */
public class ImageLoader2 extends javax.swing.JPanel {
private TraitementImg tr;
 private BufferedImage img;
 private int cliqueR;
 private BufferedImage imgs;
    /**
     * Creates new form ImageLoader2
     * @param i
     */

   public ImageLoader2(){
       initComponents();
    
     //   this.img=loadImg("src\\Cloud\\image\\impression.png");  //on met un image de base pour que java n'affiche pas de NPE avant que l'on load l'image qu'on veut
   
        
    
   }
        public void setCliqueR(int i){ //pour savoir cb de fois on appuie sur le bouton "rotation90"  
         this.cliqueR+=i*90;
          if (cliqueR>270){
             cliqueR=0;
         }
     }
   public BufferedImage getImage(){
       return img;
   }
     public ImageLoader2(TraitementImg tr,String filePath) {
        initComponents();
        this.tr=tr;
        this.img=tr.lireImg(filePath);
        
        
    }
     
      public void sauvegarderImg(BufferedImage img,String filePath){//filePath est le chemin ou on enregistre l'img. pensez à faire new File("chemin\\nomNouvelleImg ex: new File("src\\Cloud\\image\\img.jpg")
      try {
            ImageIO.write(img,"jpg",new File(filePath));
        } catch (IOException ex) {
            System.out.println(ex);
        }
        
  }
     
     public BufferedImage loadImg(String pathFile){ //penser a mettre en param pathFile=chemin du fichier
        try {//on fait des try and catch car l'addrsse de l'img peu changer et générer des bugs
            img=ImageIO.read(new File(pathFile));
            
        } catch (IOException ex) {
            System.out.println(ex);
            
        }
         
        return img;
  }
       @Override
   public void paint(Graphics g){// on veux juste ajouter des manip a laffiche de limg
      super.paint(g); 
       Graphics2D g2D=(Graphics2D)g;
       g2D.translate(this.getSize().width/2,this.getSize().height/2);
       
   

       
       if( cliqueR==90){    //
           g2D.rotate(Math.toRadians(90));
           
           imgs=img;
         
       }
       if(cliqueR==180){
           g2D.rotate(Math.toRadians(180));
           imgs=img;
       }
       if( cliqueR==270){
           g2D.rotate(Math.toRadians(270));
           imgs=img;
       }
       g2D.drawImage(img,0,0,null);
      
       
   }
   public void sauverJPanelDansFile(JPanel panneauImage, String racineFichier,String nomFichier)
	throws IOException{
		BufferedImage tamponSauvegarde = new BufferedImage(
				panneauImage.getPreferredSize().width,
				panneauImage.getPreferredSize().height,
				BufferedImage.TYPE_3BYTE_BGR);
		Graphics g = tamponSauvegarde.getGraphics();
		g.setColor(Color.WHITE);
		g.fillRect(0, 0, panneauImage.getPreferredSize().width,
				panneauImage.getPreferredSize().height);
		panneauImage.paint(g);
		ImageIO.write(tamponSauvegarde, "JPG", new File(racineFichier+nomFichier));
	}
   
 
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
